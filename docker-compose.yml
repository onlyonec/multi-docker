version: '3'

services:
  postgres:
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=password
      - PGPASSWORD=password
  redis:
    image: redis:alpine
  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - 3050:80
  api:
    build:
      context: server
      dockerfile: Dockerfile.dev
    volumes:
      - /app/node_modules
      - ./server:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGPOST=5432
      - PGDATABASE=postgres
      - PGPASSWORD=password
    command: npm run dev -- -L
  worker:
    build:
      context: worker
      dockerfile: Dockerfile.dev
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - /app/node_modules
      - ./worker:/app
    command: npm run dev -- -L # -L: enable polling to watch for changes
  client:
    build:
      context: client
      dockerfile: Dockerfile.dev
    stdin_open: true # important for react-scripts run
    environment:
      - CHOKIDAR_USEPOLLING=true # enable polling to watch for changes
    volumes:
      - /app/node_modules
      - ./client:/app
